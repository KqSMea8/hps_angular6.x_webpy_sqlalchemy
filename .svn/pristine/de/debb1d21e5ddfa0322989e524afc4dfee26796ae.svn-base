/**
 * @license hps v1.0
 * (c) 2018 穗通, Inc. http://www.grgsuitong.com/
 * @author zhanghongjun
 * @file http.service.ts
 * @createDate 2018-12-24
 * @desc http服务,在HttpClient上包装一层，统一处理请求路径、请求参数，也方便后面做一些全局处理
 */

import { Injectable } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { environment } from '../../environments/environment';
import * as _ from 'lodash';

@Injectable({
    providedIn: 'root'
})
export class HttpService {
    constructor(
        private m_objHttpClient: HttpClient,
    ) { }

    request<T> (sMethon: string, sPath: string, objParams?: object): Observable<T> {
        const reqParams: HttpParams = new HttpParams();
        if (sMethon.length === 0) {
            console.error('请求错误，sMethon不能为空');
        } else if (sPath.length === 0) {
            console.error(sPath + '请求错误，sPath不能为空');
        } else if (Object.keys(objParams).length > 0) {
            for (const key of Object.keys(objParams)) {
                reqParams.set(key, objParams[key]);
            }
        } else {
            if (sMethon.toLowerCase() === 'get') {
                return this.m_objHttpClient.get<T>(environment.baseUrl + sPath, {params: reqParams, withCredentials: false});
            } else if (sMethon.toLowerCase() === 'post') {
                return this.m_objHttpClient.post<T>(environment.baseUrl + sPath, {params: reqParams, withCredentials: false});
            } else {
                console.error('请求错误，sMethon参数错误，请检查！');
            }
        }
    }
}
