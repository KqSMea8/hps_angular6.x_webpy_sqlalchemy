# coding: utf-8

import web

from core.modules.module_handle import api_handle
from libs.orm.ormutils import dbtranscoped
from models.hps.u_user import User
from utils.func_api import FuncResult
from utils.tools import is_null
from utils import obj_to_json


class handler(object):
    @api_handle(db=True)
    def POST(self):
        return self.data_handle()

    @dbtranscoped()
    def data_handle(self):
        '''
        获取请求参数
        '''
        obj_input = web.input()
        try:
            int_userID = obj_input.get('nUserID')
            str_new_password = obj_input.get('sNewPassword')
            str_old_password = obj_input.get('sOldPassword')
            if is_null(int_userID) :
                return FuncResult(fail='参数\'nUserID\'不能为空')
            elif is_null(str_new_password):
                return FuncResult(fail='参数\'sNewPassword\'不能为空')
            elif is_null(str_old_password) :
                return FuncResult(fail='参数\'sOldPassword\'不能为空')

        except Exception, ce:
            # 异常处理
            return FuncResult(fail='参数有误！')

        return self.add_user(int_userID, str_new_password, str_old_password)

    def add_user(self, int_userID, str_new_password, str_old_password):
        obj_user = User().query.filter(User.UserID == int_userID)\
                                .first()
        if obj_user:
            if obj_user.Password == str_old_password:
                # 修改密码
                obj_user.Password = str_new_password
                # 保存更改到数据库
                obj_user.save()
                return FuncResult(success=True, msg='密码修改成功！')
            else:
                return FuncResult(msg='原密码不正确，清重新输入！')
        else:
            return FuncResult(fail='该用户编号不存在！')
